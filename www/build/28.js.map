{"version":3,"sources":["../../src/pages/change-password/change-password.module.ts","../../src/pages/change-password/change-password.ts"],"names":[],"mappings":"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","file":"28.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ChangePasswordPage } from './change-password';\n\n@NgModule({\n  declarations: [\n    ChangePasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ChangePasswordPage),\n  ],\n})\nexport class ChangePasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/change-password/change-password.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { Service } from '../../app/service';\n@IonicPage()\n@Component({\n  selector: 'page-change-password',\n  templateUrl: 'change-password.html',\n})\nexport class ChangePasswordPage {\n  change_password_form: FormGroup;\n  customer_id: any;\n  input_password: any = 'password';\n  change_password_url = 'change_password';\n  err_messg:any;\n  languageheader_url: string = 'language_settings_header';\n  languageheader: any = {};\n  code: any;\n  api_token: any;\n  data: any;\n  language_field_url: string = 'language_settings_field';\n  languagefield: any = {};\n  // ==============================================================================================================================================\n  // VALIDATION MESSAGES\n  // ==============================\n  validation_messages = {\n    'old_password': [\n      { type: 'required', message: 'Old Password is required.' },\n    ],\n    'new_password': [\n      { type: 'required', message: 'New Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 6 characters long.' },\n      // { type: 'pattern', message: 'Password must be at least 6 characters long and should contain atleast one lowercase, uppercase & numeric' }\n    ],\n    'confirm_password': [\n      { type: 'passwordNotMatch', message: 'Confirm Password Not Matching.' },\n    ],\n  };\n  // ================================================================================================================================================\n  constructor(public navCtrl: NavController, public navParams: NavParams, private api_service: Service, private formBuilder: FormBuilder) {\n    let customer_data = JSON.parse(localStorage.getItem('eastern_deals'));\n    this.customer_id = customer_data.id;\n    if (localStorage.getItem('lang_code')) {\n      let value = localStorage.getItem('lang_code');\n      this.code = value;\n      console.log(this.code);\n    }\n  }\n  ionViewDidLoad() {\n  }\n  ngOnInit() {\n    this.change_password_init();\n    this.language_header();\n    this.language_field();\n\n  }\n  // ==================================================================================================================================================\n  // CHANGE PASSWORD INITIATE\n  // ===================================\n  change_password_init() {\n    this.change_password_form = this.formBuilder.group({\n      old_password: new FormControl('', Validators.required),\n      new_password: new FormControl('', Validators.compose([\n        Validators.minLength(6),\n        Validators.required,\n      ])),\n      confirm_password: new FormControl('', [Validators.required, this.passwordMatcher.bind(this)]),\n    });\n  }\n    // confirm new password validator\nprivate passwordMatcher(control: FormControl): { [s: string]: boolean } {\n  if (\n      this.change_password_form &&\n      (control.value !== this.change_password_form.controls.new_password.value)\n  ) {\n      return { passwordNotMatch: true };\n  }\n  return null;\n}\n  // =====================================================================================================================================================\n  // SHOW PASSWORD\n  // ====================\n  showpassword() {\n    this.input_password = 'text';\n  }\n  // HIDE PASSWORD\n  // =====================\n  hidepassword(event) {\n    console.log(event.checked);\n    if(event.checked == true){\n    this.input_password = 'text';\n\n    }else{\n      this.input_password = 'password';\n\n    }\n  }\n  // =====================================================================================================================================================\n  // SUBMIT CHANGE PASSWORD \n  // ===============================\n  sub_form() {\n    if (this.change_password_form.valid) {\n      let updated_password: any = {};\n      updated_password.api_token = this.api_service.api_token;\n      updated_password.user_id = this.customer_id;\n      updated_password.old_password = this.change_password_form.value.old_password;\n      updated_password.password = this.change_password_form.value.new_password;\n      updated_password.confirm_password = this.change_password_form.value.confirm_password;\n      this.api_service.post_data(this.change_password_url, updated_password).subscribe((result: any) => {\n        if (result.status == 'success') {\n          this.api_service.stopLoader();\n          this.api_service.create(result.message, 'top', 'success');\n          this.reset_form();\n        } else {\n          this.api_service.create(result.message, 'top', 'error');\n          this.api_service.stopLoader();\n          this.err_messg = result.errors.confirm_password[0];\n          console.log(this.err_messg);\n          \n        }\n      }, (error) => {\n        this.api_service.stopLoader();\n        this.api_service.create(error, 'top', 'error');\n      })\n    } else {\n      this.validateAllFormFields(this.change_password_form);\n    }\n  }\n  // ==========================================================================================================================================\n  // RESET FORM\n  // =====================\n  reset_form() {\n    this.change_password_form.reset();\n  }\n  // =============================================================================================================================================\n  // VALIDATION METHOD\n  // ================================\n  validateAllFormFields(form: FormGroup) {\n    Object.keys(form.controls).forEach(field => {\n      const control = form.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n\n  language_header() {\n    this.data = {};\n    this.api_token = this.api_service.api_token;\n    this.data.api_token = this.api_token;\n    this.data.lang_code = this.code;\n    this.data.user_id = this.customer_id;\n    this.api_service.post_data(this.languageheader_url, this.data)\n      .subscribe((result: any) => {\n        this.api_service.stopLoader();\n        if (result.status == 'success') {\n          this.api_service.stopLoader();\n          this.languageheader = result.header_list;\n        }\n        else {\n          this.api_service.stopLoader();\n          this.api_service.create(result.message, 'top', 'error');\n        }\n      },\n        (error) => {\n          this.api_service.stopLoader();\n          this.api_service.create(error, 'top', 'error');\n        });\n  }\n  language_field() {\n    this.api_service.get_list(this.language_field_url + '?api_token=' + this.api_service.api_token + '&lang_code='+this.code).subscribe((result: any) => {\n        this.api_service.stopLoader();\n        if (result.status == 'success') {\n          this.languagefield = result.field_list;\n        }\n        else {\n          this.api_service.create(result.message, 'top', 'error');\n        }\n      },\n        (error) => {\n          this.api_service.create(error, 'top', 'error');\n        });\n  }\n  // ================================================================================================================================================\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/change-password/change-password.ts"],"sourceRoot":""}